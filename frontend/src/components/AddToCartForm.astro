---
import type { CollectionEntry } from 'astro:content'
import { getSanityImage } from '../utils/getSanityImage'


interface Props {
  id: string
  title: string
  imageNode: CollectionEntry<"products">['data']['imageWithAlt']
}

const { id, title, imageNode } = Astro.props;

const image = getSanityImage({node: imageNode, width: 100});

---

<add-to-cart-form data-id={id} data-title={title} data-image-src={image.url()}>
<form>
  <button type="submit">
    <slot />
  </button>
</form>
</add-to-cart-form>

<script>
  import { addCartItem, $isCartOpen } from '../store/cart';

  class AddToCartForm extends HTMLElement {
    form = null
    itemInfo = null

    constructor() {
      super();
      this.form = this.querySelector('form');
      this.itemInfo = {
        id: this.getAttribute('data-id'),
        title: this.getAttribute('data-title'),
        imageSrc: this.getAttribute('data-image-src'),
      };
    }

    addToCart = (e: SubmitEvent) => {
      e.preventDefault();
      $isCartOpen.set(true);
      addCartItem(this.itemInfo);
    }

    connectedCallback() {
      this.form.addEventListener('submit', this.addToCart);
    }

    disconnectedCallback() {
          this.form.removeEventListener('submit', this.addToCart);
    }
  }

  customElements.define('add-to-cart-form', AddToCartForm);
</script>
